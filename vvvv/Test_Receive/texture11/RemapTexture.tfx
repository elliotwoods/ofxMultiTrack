//@author: elliotwoods
//@help: Uncompress L16 which is stored in an RGBA8
//@tags: texture
//@credits: 

Texture2D<float2> colorCoordInDepthView : PREVIOUS;
Texture2D<float4> Image;

float2 TargetSize : TARGETSIZE;

SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Clamp;
    AddressV = Clamp;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};


float4 PS(psInput input) : SV_Target
{
	uint2 colorCoord = colorCoordInDepthView.Load(int3(input.p.xy, 0)) * float((1 << 16) - 1);
	if(all(colorCoord.x == uint2(0,0))) {
		return 0;
	} else {
		return Image.Load(int3(colorCoord, 0));
	}
}

technique10 Process
{
	pass P0
	<string format="R8G8B8A8_UNorm";>
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}



