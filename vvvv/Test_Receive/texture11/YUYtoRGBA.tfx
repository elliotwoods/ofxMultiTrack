//@author: vux
//@help: template for texture fx
//@tags: texture
//@credits: 

Texture2D texture2d : PREVIOUS;
float2 TargetSize : TARGETSIZE;

float3x3 YUV2RGB = float3x3(1,	1,	1,
				0,	-.34413, 1.772,
				1.402,	-.71414,	0);

SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Clamp;
    AddressV = Clamp;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};


float4 PS(psInput input) : SV_Target
{
	uint2 x = TargetSize * input.uv;
	bool isLeft = x.x % 2 == 0;
	x.x /= 2;
	float4 YUY2 = texture2d[x];
	
	float y = isLeft ? YUY2.z : YUY2.x;
	float u = YUY2.y; // cb
	float v = YUY2.w; // cr
	
	//from http://stackoverflow.com/questions/17939006/converting-yuv422-to-rgb-using-gpu-shader-hlsl
	float r  = y + 1.402 * (v - 0.5f);
	float g =  y - 0.344 * (u - 0.5f) - 0.714 * (v - 0.5f);
    float b =  y + 1.772 * (u - 0.5f);
	
	return y;//float4(r, g, b, 1.0f);
}

technique10 Process
{
	pass P0
	<float2 scale= float2(2.0, 1.0);>
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}



